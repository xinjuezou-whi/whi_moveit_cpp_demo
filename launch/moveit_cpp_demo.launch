<?xml version="1.0"?>
<launch>
  <!-- arguments -->
  <arg name="arm" default="whi"/>

  <!-- specify the config files to use -->
  <rosparam command="load" file="$(find whi_moveit_cpp_demo)/config/moveit_cpp.yaml"/>

  <!-- planning pipeline -->
  <include ns="/whi_moveit_cpp_demo/ompl" file="$(eval find(arg('arm') + '_moveit_config') + '/launch/ompl_planning_pipeline.launch.xml')"/>

  <!-- trajectory execution  -->
  <include ns="whi_moveit_cpp_demo" file="$(eval find(arg('arm') + '_moveit_config') + '/launch/trajectory_execution.launch.xml')">
    <arg name="moveit_controller_manager" value="fake"/>
  </include>

  <!-- load the URDF, SRDF and other .yaml configuration files on the param server -->
  <include file="$(eval find(arg('arm') + '_moveit_config') + '/launch/planning_context.launch')">
    <arg name="load_robot_description" value="true"/>
  </include>

  <!-- if needed, broadcast static tf for robot root -->
  <group if="$(eval arg('arm') == 'whi' or arg('arm') == 'panda')">
    <node pkg="tf2_ros" type="static_transform_publisher" name="virtual_joint_broadcaster_1" args="0 0 0 0 0 0 world $(arg arm)_link0"/>
  </group>
  <group if="$(eval arg('arm') == 'ar3')">
    <node pkg="tf2_ros" type="static_transform_publisher" name="virtual_joint_broadcaster_1" args="0 0 0 0 0 0 world base_link"/>
  </group>

  <!-- send fake joint values -->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <rosparam param="source_list">["/whi_moveit_cpp_demo/fake_controller_joint_states"]</rosparam>
  </node>

  <!-- start robot state publisher -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>

  <!-- launch rviz -->
  <node name="$(anon rviz)" pkg="rviz" type="rviz" respawn="false"
    args="-d $(find whi_moveit_cpp_demo)/launch/rviz_config.rviz" output="screen">
    <rosparam command="load" file="$(eval find(arg('arm') + '_moveit_config') + '/config/kinematics.yaml')"/>
  </node>

  <!-- demo params -->
  <rosparam file="$(find whi_moveit_cpp_demo)/config/config_$(arg arm).yaml" command="load"/>
  <node name="whi_moveit_cpp_demo" pkg="whi_moveit_cpp_demo" type="whi_moveit_cpp_demo_node" output="screen"/>
</launch>
